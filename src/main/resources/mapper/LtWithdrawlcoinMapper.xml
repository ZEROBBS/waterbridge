<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wswl.waterbridge.mapper.LtWithdrawlcoinMapper">
  <resultMap id="BaseResultMap" type="com.wswl.waterbridge.dto.LtWithdrawlcoin">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="asset" jdbcType="INTEGER" property="asset" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="c_name" jdbcType="VARCHAR" property="cName" />
    <result column="withdraw_min" jdbcType="DECIMAL" property="withdrawMin" />
    <result column="withdraw_fee" jdbcType="DECIMAL" property="withdrawFee" />
    <result column="del" jdbcType="INTEGER" property="del" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, asset, cid, c_name, withdraw_min, withdraw_fee, del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from lt_withdrawlcoin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from lt_withdrawlcoin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.wswl.waterbridge.dto.LtWithdrawlcoin" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into lt_withdrawlcoin (asset, cid, c_name, 
      withdraw_min, withdraw_fee, del
      )
    values (#{asset,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{cName,jdbcType=VARCHAR}, 
      #{withdrawMin,jdbcType=DECIMAL}, #{withdrawFee,jdbcType=DECIMAL}, #{del,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.wswl.waterbridge.dto.LtWithdrawlcoin" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into lt_withdrawlcoin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="asset != null">
        asset,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="cName != null">
        c_name,
      </if>
      <if test="withdrawMin != null">
        withdraw_min,
      </if>
      <if test="withdrawFee != null">
        withdraw_fee,
      </if>
      <if test="del != null">
        del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="asset != null">
        #{asset,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="cName != null">
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="withdrawMin != null">
        #{withdrawMin,jdbcType=DECIMAL},
      </if>
      <if test="withdrawFee != null">
        #{withdrawFee,jdbcType=DECIMAL},
      </if>
      <if test="del != null">
        #{del,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wswl.waterbridge.dto.LtWithdrawlcoin">
    <!--@mbg.generated-->
    update lt_withdrawlcoin
    <set>
      <if test="asset != null">
        asset = #{asset,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="cName != null">
        c_name = #{cName,jdbcType=VARCHAR},
      </if>
      <if test="withdrawMin != null">
        withdraw_min = #{withdrawMin,jdbcType=DECIMAL},
      </if>
      <if test="withdrawFee != null">
        withdraw_fee = #{withdrawFee,jdbcType=DECIMAL},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wswl.waterbridge.dto.LtWithdrawlcoin">
    <!--@mbg.generated-->
    update lt_withdrawlcoin
    set asset = #{asset,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      c_name = #{cName,jdbcType=VARCHAR},
      withdraw_min = #{withdrawMin,jdbcType=DECIMAL},
      withdraw_fee = #{withdrawFee,jdbcType=DECIMAL},
      del = #{del,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>